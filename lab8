
//PROBLEMA 1
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class RemoveDuplicatesFromList {
    public static void main(String[] args) {
        List<Integer> numbersWithDuplicates = Arrays.asList(1, 2, 2, 3, 4, 4, 5, 6, 6, 7);


        List<Integer> distinctNumbers = numbersWithDuplicates.stream()
                .distinct()
                .collect(Collectors.toList());


        System.out.println("List with duplicates: " + numbersWithDuplicates);
        System.out.println("List without duplicates: " + distinctNumbers);
    }
}

// PROBLEMA 2
import java.util.Arrays;
import java.util.List;

public class CountStringsStartingWithSpecificLetter {
    public static void main(String[] args) {
        List<String> words = Arrays.asList("apple", "banana", "orange", "avocado", "grape", "apricot");

        char specificLetter = 'a'; 

        long count = words.stream()
                .filter(word -> word.startsWith(String.valueOf(specificLetter)))
                .count();

        System.out.println("Number of strings starting with '" + specificLetter + "': " + count);
    }
}
// PROBLEMA 3
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public class SortListUsingStream {
    public static void main(String[] args) {

        List<Integer> numbers = Arrays.asList(5, 2, 8, 1, 6, 3, 9, 4, 7);

        List<Integer> ascendingOrder = numbers.stream()
                .sorted()
                .collect(Collectors.toList());

        List<Integer> descendingOrder = numbers.stream()
                .sorted(Collections.reverseOrder())
                .collect(Collectors.toList());

        System.out.println("Original List: " + numbers);
        System.out.println("Ascending Order: " + ascendingOrder);
        System.out.println("Descending Order: " + descendingOrder);
    }
}
